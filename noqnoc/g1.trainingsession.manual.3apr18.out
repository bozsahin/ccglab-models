
> (load-grammar "g1" :maker 'sbcl)


=========================== p r e p a r i n g ===============================

Project name: g1
  Input : g1.lisptokens 
  Output: g1.ded 
Check to see if output contains any spec errors.
Fix and re-run if it does.
You can also re/create g1.lisptokens by running 'tokens g1' sed script offline.
======================= l o a d i n g =======================================
; loading #P"/home/bozsahin/myrepos/ccglab-models/noqnoc/g1.ded"

Project [g1] is assumed to consist of
-----------------------------------------------------------------------------
  CCG grammar source : g1.ccg $
    Its token form   : g1.lisptokens $
  Deduction grammar  : g1.ded $ (derived from g1.lisptokens)
  Induction grammar  : g1.ind #
  Supervision source : g1.sup ^
  Model-specific code: g1.lisp ^
   and other model-specific files you may create.
       *CCG-GRAMMAR* : set from g1.ded
  *LEX-RULES-TABLE*  : set from g1.ded
Expected files       : $ for deduction, # for induction, ^ for model development
=============================================================================
T
> (make-supervision "g1" :maker 'sbcl)
WARNING: redefining COMMON-LISP-USER::LALR-PARSER in DEFUN

=========================== p r e p a r i n g ===============================

Project name: g1
  Input : g1.suptokens 
  Output: g1.sup 
Check to see if output contains any spec errors.
Fix and re-run if it does.
You can also re/create g1.suptokens by running 'suptokens g1' sed script offline.WARNING: redefining COMMON-LISP-USER::LALR-PARSER in DEFUN

=========================== p r e p a r i n g ===============================

Project name: g1
  Input : g1.supervision and g1.suptokens
  Output: g1.sup 
Check to see if output contains any spec errors.
Fix and re-run if it does.
You can also re/create g1.suptokens by running 'suptokens g1' sed script offline.
NIL
> (update-model "g1" 10 1.0 1.0 :load t)
*Beamp* = NIL  *Beam-exp* = 0.9

======================= l o a d i n g =======================================
; loading #P"/home/bozsahin/myrepos/ccglab-models/noqnoc/g1.ind"

Project [g1] is assumed to consist of
-----------------------------------------------------------------------------
  CCG grammar source : g1.ccg $
    Its token form   : g1.lisptokens $
  Deduction grammar  : g1.ded $ (derived from g1.lisptokens)
  Induction grammar  : g1.ind #
  Supervision source : g1.sup ^
  Model-specific code: g1.lisp ^
   and other model-specific files you may create.
       *CCG-GRAMMAR* : set from g1.ind
  *LEX-RULES-TABLE*  : set from g1.ind
Expected files       : $ for deduction, # for induction, ^ for model development
=============================================================================

Supervision file loaded: g1.sup
Done. use (show-training/save-training) to see/save the results
T
> (show-training)
The rule set used in the experiment:
To change a switch, use (setf <switchname> <value>)
	      where <value> is T (on) or NIL (off)
	  *f-apply*     T
	  *b-apply*     T
	  *f-comp*      T
	  *b-comp*      T
	  *fx-comp*     T
	  *bx-comp*     T
	  *f-sub*       T
	  *b-sub*       T
	  *fx-sub*      T
	  *bx-sub*      T
          *f-subbar*    NIL
	  *b-subbar*    NIL
	  *fx-subbar*   NIL
	  *bx-subbar*   NIL
	  *f-subcomp*   T
	  *b-subcomp*   T
	  *fx-subcomp*  T
	  *bx-subcomp*  T
          *f2-comp*     T
	  *b2-comp*     T
	  *fx2-comp*    T
	  *bx2-comp*    T
	  *f2-sub*      T
	  *b2-sub*      T
	  *fx2-sub*     T
	  *bx2-sub*     T
	  *f3-comp*     T
	  *b3-comp*     T
	  *fx3-comp*    T
	  *bx3-comp*    T

Training parameters: N = 10 alpha0 = 1.0 c = 1.0 n = 6  *Beamp* = NIL  *Beam-exp* = 0.9

Model parameters before and after training
================================================
key   lex             initial  final    diff 
------------------------------------------------
1     KNOWS             1.0 5.294394  (4.294394)
2     KNOWS             1.0 4.619394  (3.619394)
3     KNOWS             1.0  -3.2944  ( -4.2944)
4     KNOWS             1.0  -2.6194  ( -3.6194)
5     LOVES             1.0  7.48249  ( 6.48249)
6     LOVES             1.0  -5.4825  ( -6.4825)
7     JOHN              1.0 5.184425  (4.184425)
8     JOHN              1.0      1.0  (     0.0)
9     JOHN              1.0 8.529829  (7.529829)
10    JOHN              1.0 -2.76492  (-3.76492)
11    MARY              1.0  5.04924  ( 4.04924)
12    MARY              1.0      1.0  (     0.0)
13    MARY              1.0 9.643322  (8.643322)
14    MARY              1.0 -3.32166  (-4.32166)
15    JOHN              1.0 -3.18443  (-4.18443)
16    JOHN              1.0 -2.76492  (-3.76492)
17    MARY              1.0 -3.04924  (-4.04924)
18    MARY              1.0 -3.32166  (-4.32166)
================================================
NIL
> (save-training "new-g1.ind")

NIL
> (load-model "new-g1.ind")

======================= l o a d i n g =======================================
Project new-g1.ind cannot be loaded:
  *ccg-grammar* is unchanged.
  *lex-rules-table* is unchanged.
NIL
> (load-model "new-g1")

======================= l o a d i n g =======================================
; loading #P"/home/bozsahin/myrepos/ccglab-models/noqnoc/new-g1.ind"

Project [new-g1] is assumed to consist of
-----------------------------------------------------------------------------
  CCG grammar source : new-g1.ccg $
    Its token form   : new-g1.lisptokens $
  Deduction grammar  : new-g1.ded $ (derived from new-g1.lisptokens)
  Induction grammar  : new-g1.ind #
  Supervision source : new-g1.sup ^
  Model-specific code: new-g1.lisp ^
   and other model-specific files you may create.
       *CCG-GRAMMAR* : set from new-g1.ind
  *LEX-RULES-TABLE*  : set from new-g1.ind
Expected files       : $ for deduction, # for induction, ^ for model development
=============================================================================
T
> (z)
Max z-score = 1.7556216, Min z-score = -1.3167167
Done. Use save-grammar to save the changes in a file
NIL
> (save-grammar "new-g1-zscored.ind")

NIL
> (dribble)
