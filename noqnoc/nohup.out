STYLE-WARNING: defining (*TOPCAT*) as a constant, even though the name follows
the usual naming convention (names like *FOO*) for special variables

; file: /Users/bozsahin/mysrc/lisp/lalrparser.lisp
; in: DEFUN MAKE-PARSER
;     (BUILDPARSER)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDPARSER

;     (BUILDTABLE)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDTABLE

;     (COMPUTE-EXPANSION CAT)
; 
; caught STYLE-WARNING:
;   undefined function: COMPUTE-EXPANSION

;     #'DERIVESEPS
; 
; caught STYLE-WARNING:
;   undefined function: DERIVESEPS

;     (FIRSTTERMS (LIST CAT))
; 
; caught STYLE-WARNING:
;   undefined function: FIRSTTERMS

;     (GETALLCATS)
; 
; caught STYLE-WARNING:
;   undefined function: GETALLCATS

;     (PRINT-TABLE STATELIST)
; 
; caught STYLE-WARNING:
;   undefined function: PRINT-TABLE

;     (TRANSFORMRULE R (INCF I))
; 
; caught STYLE-WARNING:
;   undefined function: TRANSFORMRULE
; 
; compilation unit finished
;   Undefined functions:
;     BUILDPARSER BUILDTABLE COMPUTE-EXPANSION DERIVESEPS FIRSTTERMS GETALLCATS PRINT-TABLE TRANSFORMRULE
;   caught 8 STYLE-WARNING conditions

; in: DEFUN GETSTATENAME
;     (BUILDSTATE STATE ITEMS)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDSTATE

;     (FOLLOWSTATE ITEMS)
; 
; caught STYLE-WARNING:
;   undefined function: FOLLOWSTATE
; 
; compilation unit finished
;   Undefined functions:
;     BUILDSTATE FOLLOWSTATE
;   caught 2 STYLE-WARNING conditions

; in: DEFUN PARSE
;     (LALR-PARSER #'NEXT-INPUT #'PARSE-ERROR)
; 
; caught STYLE-WARNING:
;   undefined function: LALR-PARSER
; 
; compilation unit finished
;   Undefined function:
;     LALR-PARSER
;   caught 1 STYLE-WARNING condition
STYLE-WARNING:
   redefining PRINT-OBJECT (#<STRUCTURE-CLASS HASH-TABLE>
                            #<SB-PCL:SYSTEM-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining COMMON-LISP-USER::PARSE in DEFUN

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN F-APPLY
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH (MACHASH 'ARG 'SYN HT1) (MACHASH 'SYN HT2))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT1) LEX2)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '>)
;              (AND (MACHASH 'LEX 'SYN HT1) (SETF #))
;              (SETF # #)
;              NEWHT)))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G0)
;       (DECLARE (IGNORE #:G0))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT1) LEX2)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '>)
;              (AND (MACHASH 'LEX 'SYN HT1) (SETF #))
;              (SETF # #)
;              NEWHT)))
; 
; caught STYLE-WARNING:
;   The variable B2 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN B-APPLY
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH (MACHASH 'SYN HT1) (MACHASH 'ARG 'SYN HT2))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT2) LEX1)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '<)
;              (AND (MACHASH 'LEX 'SYN HT2) (SETF #))
;              (SETF # #)
;              NEWHT)))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G0)
;       (DECLARE (IGNORE #:G0))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT2) LEX1)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '<)
;              (AND (MACHASH 'LEX 'SYN HT2) (SETF #))
;              (SETF # #)
;              NEWHT)))
; 
; caught STYLE-WARNING:
;   The variable B1 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN APPLY-UNARY-RULES
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH
;          (MACHASH 'SYN (NV-LIST-VAL 'SOLUTION (MACHASH # *CKY-HASHTABLE*)))
;          (MACHASH 'INSYN LR))
;       (AND MATCH (SETF R (+ R 1))
;            (LET ((NEWHT #) (NLR #))
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (IF LEXP
;                  (SETF #)
;                  (SETF #)))))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G4)
;       (DECLARE (IGNORE #:G4))
;       (AND MATCH (SETF R (+ R 1))
;            (LET ((NEWHT #) (NLR #))
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (IF LEXP
;                  (SETF #)
;                  (SETF #)))))
; 
; caught STYLE-WARNING:
;   The variable B1 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
STYLE-WARNING: defining (*TOPCAT*) as a constant, even though the name follows
the usual naming convention (names like *FOO*) for special variables

; file: /Users/bozsahin/mysrc/lisp/lalrparser.lisp
; in: DEFUN MAKE-PARSER
;     (BUILDPARSER)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDPARSER

;     (BUILDTABLE)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDTABLE

;     (COMPUTE-EXPANSION CAT)
; 
; caught STYLE-WARNING:
;   undefined function: COMPUTE-EXPANSION

;     #'DERIVESEPS
; 
; caught STYLE-WARNING:
;   undefined function: DERIVESEPS

;     (FIRSTTERMS (LIST CAT))
; 
; caught STYLE-WARNING:
;   undefined function: FIRSTTERMS

;     (GETALLCATS)
; 
; caught STYLE-WARNING:
;   undefined function: GETALLCATS

;     (PRINT-TABLE STATELIST)
; 
; caught STYLE-WARNING:
;   undefined function: PRINT-TABLE

;     (TRANSFORMRULE R (INCF I))
; 
; caught STYLE-WARNING:
;   undefined function: TRANSFORMRULE
; 
; compilation unit finished
;   Undefined functions:
;     BUILDPARSER BUILDTABLE COMPUTE-EXPANSION DERIVESEPS FIRSTTERMS GETALLCATS PRINT-TABLE TRANSFORMRULE
;   caught 8 STYLE-WARNING conditions

; in: DEFUN GETSTATENAME
;     (BUILDSTATE STATE ITEMS)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDSTATE

;     (FOLLOWSTATE ITEMS)
; 
; caught STYLE-WARNING:
;   undefined function: FOLLOWSTATE
; 
; compilation unit finished
;   Undefined functions:
;     BUILDSTATE FOLLOWSTATE
;   caught 2 STYLE-WARNING conditions

; in: DEFUN PARSE
;     (LALR-PARSER #'NEXT-INPUT #'PARSE-ERROR)
; 
; caught STYLE-WARNING:
;   undefined function: LALR-PARSER
; 
; compilation unit finished
;   Undefined function:
;     LALR-PARSER
;   caught 1 STYLE-WARNING condition
STYLE-WARNING:
   redefining PRINT-OBJECT (#<STRUCTURE-CLASS HASH-TABLE>
                            #<SB-PCL:SYSTEM-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining COMMON-LISP-USER::PARSE in DEFUN

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN F-APPLY
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH (MACHASH 'ARG 'SYN HT1) (MACHASH 'SYN HT2))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT1) LEX2)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '>)
;              (AND (MACHASH 'LEX 'SYN HT1) (SETF #))
;              (SETF # #)
;              NEWHT)))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G0)
;       (DECLARE (IGNORE #:G0))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT1) LEX2)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '>)
;              (AND (MACHASH 'LEX 'SYN HT1) (SETF #))
;              (SETF # #)
;              NEWHT)))
; 
; caught STYLE-WARNING:
;   The variable B2 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN B-APPLY
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH (MACHASH 'SYN HT1) (MACHASH 'ARG 'SYN HT2))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT2) LEX1)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '<)
;              (AND (MACHASH 'LEX 'SYN HT2) (SETF #))
;              (SETF # #)
;              NEWHT)))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G0)
;       (DECLARE (IGNORE #:G0))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT2) LEX1)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '<)
;              (AND (MACHASH 'LEX 'SYN HT2) (SETF #))
;              (SETF # #)
;              NEWHT)))
; 
; caught STYLE-WARNING:
;   The variable B1 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN APPLY-UNARY-RULES
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH
;          (MACHASH 'SYN (NV-LIST-VAL 'SOLUTION (MACHASH # *CKY-HASHTABLE*)))
;          (MACHASH 'INSYN LR))
;       (AND MATCH (SETF R (+ R 1))
;            (LET ((NEWHT #) (NLR #))
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (IF LEXP
;                  (SETF #)
;                  (SETF #)))))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G4)
;       (DECLARE (IGNORE #:G4))
;       (AND MATCH (SETF R (+ R 1))
;            (LET ((NEWHT #) (NLR #))
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (IF LEXP
;                  (SETF #)
;                  (SETF #)))))
; 
; caught STYLE-WARNING:
;   The variable B1 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
STYLE-WARNING: defining (*TOPCAT*) as a constant, even though the name follows
the usual naming convention (names like *FOO*) for special variables

; file: /Users/bozsahin/mysrc/lisp/lalrparser.lisp
; in: DEFUN MAKE-PARSER
;     (BUILDPARSER)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDPARSER

;     (BUILDTABLE)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDTABLE

;     (COMPUTE-EXPANSION CAT)
; 
; caught STYLE-WARNING:
;   undefined function: COMPUTE-EXPANSION

;     #'DERIVESEPS
; 
; caught STYLE-WARNING:
;   undefined function: DERIVESEPS

;     (FIRSTTERMS (LIST CAT))
; 
; caught STYLE-WARNING:
;   undefined function: FIRSTTERMS

;     (GETALLCATS)
; 
; caught STYLE-WARNING:
;   undefined function: GETALLCATS

;     (PRINT-TABLE STATELIST)
; 
; caught STYLE-WARNING:
;   undefined function: PRINT-TABLE

;     (TRANSFORMRULE R (INCF I))
; 
; caught STYLE-WARNING:
;   undefined function: TRANSFORMRULE
; 
; compilation unit finished
;   Undefined functions:
;     BUILDPARSER BUILDTABLE COMPUTE-EXPANSION DERIVESEPS FIRSTTERMS GETALLCATS PRINT-TABLE TRANSFORMRULE
;   caught 8 STYLE-WARNING conditions

; in: DEFUN GETSTATENAME
;     (BUILDSTATE STATE ITEMS)
; 
; caught STYLE-WARNING:
;   undefined function: BUILDSTATE

;     (FOLLOWSTATE ITEMS)
; 
; caught STYLE-WARNING:
;   undefined function: FOLLOWSTATE
; 
; compilation unit finished
;   Undefined functions:
;     BUILDSTATE FOLLOWSTATE
;   caught 2 STYLE-WARNING conditions

; in: DEFUN PARSE
;     (LALR-PARSER #'NEXT-INPUT #'PARSE-ERROR)
; 
; caught STYLE-WARNING:
;   undefined function: LALR-PARSER
; 
; compilation unit finished
;   Undefined function:
;     LALR-PARSER
;   caught 1 STYLE-WARNING condition
STYLE-WARNING:
   redefining PRINT-OBJECT (#<STRUCTURE-CLASS HASH-TABLE>
                            #<SB-PCL:SYSTEM-CLASS T>) in DEFMETHOD
STYLE-WARNING: redefining COMMON-LISP-USER::PARSE in DEFUN

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN F-APPLY
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH (MACHASH 'ARG 'SYN HT1) (MACHASH 'SYN HT2))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT1) LEX2)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '>)
;              (AND (MACHASH 'LEX 'SYN HT1) (SETF #))
;              (SETF # #)
;              NEWHT)))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G0)
;       (DECLARE (IGNORE #:G0))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT1) LEX2)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '>)
;              (AND (MACHASH 'LEX 'SYN HT1) (SETF #))
;              (SETF # #)
;              NEWHT)))
; 
; caught STYLE-WARNING:
;   The variable B2 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN B-APPLY
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH (MACHASH 'SYN HT1) (MACHASH 'ARG 'SYN HT2))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT2) LEX1)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '<)
;              (AND (MACHASH 'LEX 'SYN HT2) (SETF #))
;              (SETF # #)
;              NEWHT)))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G0)
;       (DECLARE (IGNORE #:G0))
;       (AND MATCH (LEX-CHECK (MACHASH 'LEX 'SYN HT2) LEX1)
;            (LET ((NEWHT #))
;              (SETF # #)
;              (SETF # '<)
;              (AND (MACHASH 'LEX 'SYN HT2) (SETF #))
;              (SETF # #)
;              NEWHT)))
; 
; caught STYLE-WARNING:
;   The variable B1 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

; file: /Users/bozsahin/myrepos/ccglab/bin/ccg.lisp
; in: DEFUN APPLY-UNARY-RULES
;     (MULTIPLE-VALUE-BIND (MATCH B1 B2)
;         (CAT-MATCH
;          (MACHASH 'SYN (NV-LIST-VAL 'SOLUTION (MACHASH # *CKY-HASHTABLE*)))
;          (MACHASH 'INSYN LR))
;       (AND MATCH (SETF R (+ R 1))
;            (LET ((NEWHT #) (NLR #))
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (IF LEXP
;                  (SETF #)
;                  (SETF #)))))
; --> MULTIPLE-VALUE-CALL 
; ==>
;   #'(LAMBDA (&OPTIONAL (MATCH) (B1) (B2) &REST #:G4)
;       (DECLARE (IGNORE #:G4))
;       (AND MATCH (SETF R (+ R 1))
;            (LET ((NEWHT #) (NLR #))
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (SETF # #)
;              (IF LEXP
;                  (SETF #)
;                  (SETF #)))))
; 
; caught STYLE-WARNING:
;   The variable B1 is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
